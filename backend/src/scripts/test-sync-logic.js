const path = require('path');
require('dotenv').config({ path: path.join(__dirname, '..', '..', '.env') });

// Importar la funci√≥n del controller
const { findOrCreateSalesPerson } = require('../controllers/automations.controller');

async function testSyncLogic() {
    console.log('üß™ PROBANDO NUEVA L√ìGICA DE SYNC');
    console.log('================================\n');

    const testCases = [
        { name: "Eben Woodall", branchId: 1, expected: "should find Eben Woodbell (similar)" },
        { name: "Mathew Stevenson", branchId: 1, expected: "should find Matthew Stevenson (similar)" },
        { name: "Dan Howard", branchId: 1, expected: "should find existing Dan Howard (exact)" },
        { name: "Daniel Howard", branchId: 1, expected: "should NOT reactivate inactive Daniel Howard" },
        { name: "Brandon L.", branchId: 1, expected: "should find Brandon LaDue (similar)" },
        { name: "New Person", branchId: 1, expected: "should create new salesperson" }
    ];

    for (const testCase of testCases) {
        console.log(`\nüîç Probando: "${testCase.name}"`);
        console.log(`   Esperado: ${testCase.expected}`);
        
        try {
            const result = await findOrCreateSalesPerson(testCase.name, testCase.branchId, []);
            
            if (result) {
                console.log(`   ‚úÖ Resultado: ${result.name} (ID: ${result.id}, Active: ${result.is_active})`);
            } else {
                console.log(`   ‚ùå Resultado: null (no se encontr√≥/cre√≥ salesperson)`);
            }
        } catch (error) {
            console.log(`   ‚ùå Error: ${error.message}`);
        }
    }

    console.log('\nüìä RESUMEN DE LA PRUEBA:');
    console.log('========================');
    console.log('‚Ä¢ La nueva l√≥gica NO reactiva salespersons inactivos autom√°ticamente');
    console.log('‚Ä¢ Usa el mismo algoritmo de similitud que el script de limpieza');
    console.log('‚Ä¢ Solo asigna branches a salespersons nuevos');
    console.log('‚Ä¢ Mantiene la integridad de los datos existentes');
}

// Ejecutar la prueba
testSyncLogic()
    .then(() => {
        console.log('\n‚úÖ Prueba completada');
        process.exit(0);
    })
    .catch(error => {
        console.error('\n‚ùå Error en la prueba:', error);
        process.exit(1);
    }); 